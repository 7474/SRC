<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; UTF-8">
<TITLE>文字列処理関数</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<OBJECT TYPE="application/x-oleobject" CLASSID="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
	<PARAM NAME="Keyword" VALUE="文字列処理関数">
</OBJECT>

<P><A NAME=".2.ndn"></A></P>

<P><B>文字列処理関数</B></P>

<P><B>Format(数値,書式)</B></P>

<P>数値を指定した書式で表示した文字列を返します。</P>

<P>書式指定には以下の文字が使用できます。</P>

<P>0数値の一桁を表します。該当する桁位置に値がない場合は0を表示します。</P>

<P>#数値の一桁を表します。該当する桁位置に値がない場合はなにも表示しません。</P>

<P>.小数点の位置を指定します。</P>

<P>%数値を100倍し、パーセント記号をつけて表示します。</P>

<P>,1000単位の区切り位置を指定します。</P>

<P><B>例</B> Format(1234.5,"##,##0.00")は「1,234.50」を返す。</P>

<P><B>InStr(文字列１,文字列２[,検索開始位置])</B></P>

<P>文字列２が文字列１の何文字目から始まっているかを返します。文字列２が文字列１の中になければ0を返します。</P>

<P><B>例</B> InStr("如月舞","月") は 2 を返す。</P>

<P>検索開始位置を指定することで文字列１の先頭からではなく、途中から文字列２を検索することも出来ます。</P>

<P><B>例</B> InStr("山あり谷あり","あり",3) は 5 を返す。</P>

<P><B>InStrRev(文字列１,文字列２[,検索開始位置])</B></P>

<P>文字列２が文字列１の何文字目から始まっているか後ろから検索して返します。文字列２が文字列１の中になければ0を返します。</P>

<P><B>例</B> InStrRev("一日一善","一") は 3 を返す。</P>

<P>検索開始位置を指定することで文字列１の末尾からではなく、途中から文字列２を検索することも出来ます。</P>

<P><B>例</B> InStr("毎日毎日","日",3) は 2 を返す。</P>

<P><B>IsNumeric(文字列)</B></P>

<P>指定した文字列が数値を表している場合に 1 を、そうでなければ 0 を返します。数値は小数でもかまいません。</P>

<P><B>例</B> IsNumeric("125") は 1 を返す。</P>

<P><B>Left(文字列,文字数)</B></P>

<P>文字列の左から指定した文字数の文字列を取り出して返します。</P>

<P><B>例</B> Left("如月舞",2) は「如月」を返す。</P>

<P><B>Len(文字列)</B></P>

<P>指定した文字列の文字数を返します。</P>

<P><B>例</B> Len("如月舞") は 3 を返す。</P>

<P><B>LSet(文字列,文字数)</B></P>

<P>文字列が左詰めで指定した文字数の長さになるように右端に空白を追加して返します。他の文字列操作関数と異なり、全角文字は2文字として計算されます。文字列が指定した文字数よりも長ければ文字列をそのまま返します。</P>

<P><B>例</B> LSet("如月舞",8) は「如月舞  」を返す。</P>

<P><B>Mid(文字列,位置[,文字数])</B></P>

<P>文字列の指定した位置（先頭からの文字数）から指定した文字数の文字列を取り出して返します。文字数を省略した場合は指定した位置から文字列の終わりまでの文字列を返します。</P>

<P><B>例</B> Mid("如月舞",2,1) は 「月」を返す。</P>

<P><B>Replace(文字列１,文字列２,文字列３[,開始位置[,文字数]])</B></P>

<P>文字列１の中から文字列２を検索し、それらを全て文字列３に置換します。</P>

<P>開始位置が指定されている場合は、開始位置以降の文字を対象に、文字数まで指定されている場合は、開始位置から文字数の文字が置換の対象になります。</P>

<P><B>例</B> Replace("abcdefabcdef","cde","CDE", 5)は「abcdefabCDEf」を返す。</P>

<P><B>例２</B> Replace("abcdefabcdef","cde","CDE", 2, 6)は「abCDEfabcdef」を返す</P>

<P><B>Right(文字列,文字数)</B></P>

<P>文字列の右から指定した文字数の文字列を取り出して返します。</P>

<P><B>例</B> Right("如月舞",1) は「舞」を返す。</P>

<P><B>RSet(文字列,文字数)</B></P>

<P>文字列が右詰めで指定した文字数の長さになるように左端に空白を追加して返します。他の文字列操作関数と異なり、全角文字は2文字として計算されます。文字列が指定した文字数よりも長ければ文字列をそのまま返します。</P>

<P><B>例</B> RSet("如月舞",8) は「  如月舞」を返す。</P>

<P><B>StrComp(文字列１,文字列２)</B></P>

<P>文字列１と文字列２を辞書順で比較し、以下の結果を返します。</P>

<P><B>文字列１ &lt; 文字列２</B>-1を返す。</P>

<P><B>文字列１ = 文字列２</B>0を返す。</P>

<P><B>文字列１ &gt; 文字列２</B>1を返す。</P>

<P><B>例</B> StrComp("きさらぎ","まい") は -1 を返す。</P>

<P><IMG SRC="../images/bm0.gif" ALT="" BORDER=0> 漢字を指定した場合、比較結果は必ずしも読みとは一致しません。</P>

<P><B>String(回数,文字列)</B></P>

<P>指定した文字列を指定した回数繰り返した文字列を返します。</P>

<P><B>例</B> String(3,"ブン") は「ブンブンブン」を返す。</P>

<P><B>Wide(文字列)</B></P>

<P>文字列を全角文字に変換して返します。</P>

<P><B>例</B> Wide(365) は「３６５」を返す。</P>

<P>以下の関数は文字列をバイト列として扱います。全角文字は2バイト、半角文字は1バイトで表現されています。</P>

<P><B>InStrB(文字列１,文字列２[,検索開始位置])</B></P>

<P>文字列２が文字列１の何バイト目から始まっているかを返します。文字列２が文字列１の中になければ0を返します。</P>

<P>InStr関数同様、検索開始位置を指定することも出来ます。</P>

<P><B>例</B> InStrB("5月5日","日") は 5 を返す。</P>

<P><B>InStrRevB(文字列１,文字列２[,検索開始位置])</B></P>

<P>文字列２が文字列１の何バイト目から始まっているか後ろから検索して返します。文字列２が文字列１の中になければ0を返します。</P>

<P>InStrRev関数同様、検索開始位置を指定することも出来ます。</P>

<P><B>例</B> InStrRev("5月5日","5") は 4 を返す。</P>

<P><B>LenB(文字列)</B></P>

<P>指定した文字列のバイト数を返します。</P>

<P><B>例</B> LenB("5月5日") は 6 を返す。</P>

<P><B>LeftB(文字列,バイト数)</B></P>

<P>文字列の左から指定したバイト数の文字列を取り出して返します。</P>

<P><B>例</B> LeftB("5月5日",3) は「5月」を返す。</P>

<P><B>MidB(文字列,位置[,バイト数])</B></P>

<P>文字列の指定した位置（先頭からのバイト数）から指定したバイト数の文字列を取り出して返します。バイト数を省略した場合は指定した位置から文字列の終わりまでの文字列を返します。</P>

<P><B>例</B> MidB("5月5日",2,3) は 「月5」を返す。</P>

<P><B>RightB(文字列,バイト数)</B></P>

<P>文字列の右から指定したバイト数の文字列を取り出して返します。</P>

<P><B>例</B> RightB("5月5日",2) は「日」を返す。</P>

</BODY>
</HTML>
