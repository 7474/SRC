@using SRCCore.Models

<article class="card src-data" id="unit-@Data.Name">
    <header class="card-header">
        <div class="card-header-title">
            <div class="media">
                <div class="media-left">
                    <figure class="image is-64x64">
                        <img src="@DataContainer.BitmapIndex.GetBitmapUri("Unit", Data.Bitmap0)" alt="Unit image">
                    </figure>
                </div>
                <div class="media-content">
                    <p class="title is-4">@Data.Name</p>
                    <p class="subtitle is-6">@Data.Nickname</p>
                </div>
            </div>
        </div>
    </header>
    <div class="card-content">
        <div class="content">
            <div class="level is-mobile">
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">ＨＰ</p>
                        <p class="title">@Data.HP</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">ＥＮ</p>
                        <p class="title">@Data.EN</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">装甲</p>
                        <p class="title">@Data.Armor</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">運動性</p>
                        <p class="title">@Data.Mobility</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">移動力</p>
                        <p class="title">@Data.Speed</p>
                    </div>
                </div>
            </div>
            <div class="level is-mobile">
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">タイプ</p>
                        <p class="title">@Data.Transportation</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">適応</p>
                        <p class="title">@Data.Adaption</p>
                    </div>
                </div>
                <div class="level-item has-text-centered">
                    <div>
                        <p class="heading">サイズ</p>
                        <p class="title">@Data.Size</p>
                    </div>
                </div>
            </div>
            <ul>
                @* 先頭は『特殊能力』表示用なので飛ばす *@
                @foreach (var fd in Data.Features.Skip(1))
                {
                    <li>
                        @fd.Name
                        @(fd.HasLevel ? $"Lv{fd.Level}" : "")
                        @fd.StrData
                    </li>
                }
            </ul>
        </div>
        @if (Data.Weapons.Any())
        {
            <div class="table-container">
                <table class="table">
                    <thead>
                        <tr>
                            <th>名称</th>
                            <th>攻撃</th>
                            <th>射程</th>
                            <th>命</th>
                            <th>弾</th>
                            <th>EN</th>
                            <th>気力</th>
                            <th>適応</th>
                            <th>CT</th>
                            <th>分類</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var wd in Data.Weapons)
                        {
                            <tr>
                                <td class="has-text-left name-cell">@wd.Name</td>
                                <td class="has-text-right">@wd.Power</td>
                                <td class="has-text-centered">@wd.MinRange ~ @wd.MaxRange</td>
                                <td class="has-text-right">@(wd.Precision >= 0 ? $"+{wd.Precision}" : $"{wd.Precision}")</td>
                                <td class="has-text-right">@(wd.Bullet > 0 ? wd.Bullet : "-")</td>
                                <td class="has-text-right">@(wd.ENConsumption > 0 ? wd.ENConsumption : "-")</td>
                                <td class="has-text-right">@(wd.NecessaryMorale > 0 ? wd.NecessaryMorale : "-")</td>
                                <td class="has-text-left">@wd.Adaption</td>
                                <td class="has-text-right">@(wd.Critical >= 0 ? $"+{wd.Critical}" : $"{wd.Critical}")</td>
                                <td class="has-text-left">@wd.Class</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        @if (Data.Abilities.Any())
        {
            <div class="table-container">
                <table class="table">
                    <thead class="is-size-7">
                        <tr>
                            <th>名称</th>
                            <th>効果</th>
                            <th>射程</th>
                            <th>数</th>
                            <th>EN</th>
                            <th>気力</th>
                            <th>分類</th>
                        </tr>
                    </thead>
                    <tbody class="is-size-7">
                        @foreach (var ad in Data.Abilities)
                        {
                            <tr>
                                <td class="has-text-left name-cell">@ad.Name</td>
                                <td class="has-text-left">---</td>
                                <td class="has-text-centered">@ad.MinRange ~ @ad.MaxRange</td>
                                <td class="has-text-right">@(ad.Stock > 0 ? ad.Stock : "-")</td>
                                <td class="has-text-right">@(ad.ENConsumption > 0 ? ad.ENConsumption : "-")</td>
                                <td class="has-text-right">@(ad.NecessaryMorale > 0 ? ad.NecessaryMorale : "-")</td>
                                <td class="has-text-left">@ad.Class</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        <div class="content">
            @if (!string.IsNullOrEmpty(Data.Comment))
            {
                <div class="src-comment">@Data.Comment</div>
            }
            <button class="button is-small" @onclick="OnClickRaw">Raw</button>
            <div class="src-raw" style="@(ExpandRaw ? "" : "display: none;")">@Data.Raw</div>
        </div>
    </div>
    <footer class="card-footer">
    </footer>
</article>

@code {
    [Inject]
    SrcDataContainer DataContainer { get; set; }
    [Parameter]
    public UnitData Data { get; set; }

    private bool ExpandRaw = false;

    private void OnClickRaw()
    {
        ExpandRaw = !ExpandRaw;
    }
}
