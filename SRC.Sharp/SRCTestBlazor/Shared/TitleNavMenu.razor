@using SRCTestBlazor.Models
@using System.Net.Http
@using System.Web

@inject HttpClient Http

<div class="navbar-item">
    <input type="hidden" @bind="IndexUri" />
    <input class="form-control mr-sm-2" type="search" placeholder="Filter" @oninput="OnChangeFilter" />
</div>
<hr class="navbar-divider">
@if (Titles != null)
{
    foreach (var title in Titles)
    {
        <NavLink class="navbar-item" href="@ToTitlePathParam(title)">
            @title.Title
        </NavLink>
    }
}

@code {
    private string IndexUri { get; set; }
    private string IndexBase { get; set; }
    private string FilterValue { get; set; }

    private SrcDataIndex SrcDataIndex { get; set; }
    private ICollection<TitleData> Titles { get; set; }

    // OnInputにすると結構入力に対する応答時間が厳しい
    private void OnChangeFilter(ChangeEventArgs e)
    {
        FilterValue = e.Value?.ToString() ?? "";

        Titles = SrcDataIndex.Titles.Where(x => x.Path.Contains(FilterValue)).ToList();
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        IndexUri = "https://raw.githubusercontent.com/7474/SRC-Data/master/index.json";
        IndexBase = "https://raw.githubusercontent.com/7474/SRC-Data/master/";

        await UpdateIndex();
    }

    private async Task UpdateIndex()
    {
        SrcDataIndex = await Http.GetFromJsonAsync<SrcDataIndex>(IndexUri);
        Titles = SrcDataIndex.Titles;
        StateHasChanged();
    }

    private string ToTitlePathParam(TitleData title)
    {
        return "titles/" + HttpUtility.UrlEncode(IndexBase + title.Path) 
            + "/"
            + string.Join("&", title.Files.Select(x => HttpUtility.UrlEncode(x)));
    }

    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
