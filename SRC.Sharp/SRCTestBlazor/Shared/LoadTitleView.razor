@using System.Diagnostics;
@using System.Net.Http
@using System.Web
@using System.IO

@inject HttpClient Http

<TitleView SRC="@SRC" DataTitle="@DataTitle" />
<div id="status">@StatusText</div>

@code {
    [Parameter]
    public string DataPath { get; set; }
    [Parameter]
    public string DataFiles { get; set; }

    private SRC SRC = new SRC();
    private string StatusText = "";
    private string DataTitle { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        await UpdateData();
    }

    private async Task UpdateData()
    {
        var sw = new Stopwatch();
        sw.Start();

        SRC.UDList.Clear();
        SRC.PDList.Clear();

        // XXX デコードはページ側の責務な気がする
        var baseUri = HttpUtility.UrlDecode(DataPath);
        var dataFiles = DataFiles.Split("&").Select(x => HttpUtility.UrlDecode(x));
        DataTitle = Path.GetFileName(baseUri);
        foreach (var file in dataFiles)
        {
            try
            {
                switch (file.ToLower())
                {
                    case "unit.txt":
                    case "robot.txt":
                        SRC.UDList.Load(file, await Http.GetStreamAsync($"{baseUri}/{file}"));
                        Console.WriteLine($"{file} was loaded.");
                        break;
                    case "pilot.txt":
                        SRC.PDList.Load(file, await Http.GetStreamAsync($"{baseUri}/{file}"));
                        Console.WriteLine($"{file} was loaded.");
                        break;
                    default:
                        Console.WriteLine($"{file} is not supported.");
                        break;
                }
            }
            catch { }
        }

        sw.Stop();
        Console.WriteLine(sw.ElapsedMilliseconds);
        StatusText = $"{sw.ElapsedMilliseconds}ms";
        StateHasChanged();
    }
}
