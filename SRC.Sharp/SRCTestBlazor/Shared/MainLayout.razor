@inherits LayoutComponentBase
@implements IDisposable
@inject NavigationManager NavigationManager
@* XXX HACK https://github.com/jgthms/bulma/issues/1655 *@
<nav class="navbar is-fixed-top is-light" style="z-index: 1000;" role="navigation" aria-label="main navigation">
    <div class="navbar-brand">
        <NavLink class="navbar-item" href="#">SRC#DataViewer</NavLink>
        <a role="button"
           aria-label="menu" aria-expanded="false"
           class="navbar-burger @(IsBurgerActive ? " is-active" : "" )"
           @onclick="OnClickBurger">
            <span aria-hidden="true"></span>
            <span aria-hidden="true"></span>
            <span aria-hidden="true"></span>
        </a>
    </div>
    <div class="navbar-menu  @(IsBurgerActive ? " is-active" : "" )">
        <nav class="navbar" role="navigation" aria-label="dropdown navigation">
            <div class="navbar-item has-dropdown is-hoverable">
                <a class="navbar-link">
                    Titles
                </a>
                <div class="navbar-dropdown">
                    <TitleNavMenu />
                </div>
            </div>
        </nav>
    </div>
</nav>

<main class="container is-max-desktop">
    @Body
</main>

@code {
    [Inject]
    protected IJSRuntime JsInterop { get; set; }

    private bool IsBurgerActive = false;


    private void OnClickBurger()
    {
        IsBurgerActive = !IsBurgerActive;
    }

    protected override void OnInitialized()
    {
        NavigationManager.LocationChanged += HandleLocationChanged;
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= HandleLocationChanged;
    }

    private async void HandleLocationChanged(object sender, LocationChangedEventArgs e)
    {
        // ナビゲーションがあったらハンバーガーを閉じる
        IsBurgerActive = false;
        // ドロップダウンを閉じるためにフォーカスを外す
        await JsInterop.InvokeVoidAsync("bulma.blur", null);

        StateHasChanged();
    }
}