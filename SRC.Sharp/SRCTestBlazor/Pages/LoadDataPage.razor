@page "/"
@using Microsoft.AspNetCore.Components.Forms
@using SRCTestBlazor.Extensions
@using System.Diagnostics;

<section class="mt-5 mb-5">
    <div class="message">
        <div class="message-header">
            <p>SRC#DataViewer</p>
        </div>
        <div class="message-body">
            <p>SRC向けのデータのビューワです。</p>
            <p>Titlesメニューから<a href="http://www.gsc.ne.jp/" target="_blank">GSC</a>に投稿されたデータを選択するか、以下のフォームで任意のファイルを読み込んでください。</p>
        </div>
    </div>
    <div class="content">
        <InputFile OnChange="OnInputFileChange" multiple />
        <p>現在対応しているデータファイルは<code>robot.txt, unit.txt, pilot.txt, pilot_message.txt, pilot_dialog.txt, item.txt</code>の一部分です。</p>
        <p>データフォルダ内のファイルを全選択するなど、複数のファイルを一括読み込みできます。対応していないファイルは無視されます。</p>
    </div>
</section>

<TitleView SRC="@SRC" DataTitle="" />
<div id="status" class="message">@StatusText</div>

@code {
    private SRC SRC = new SRC();
    private string StatusText = "";

    protected override async Task OnInitializedAsync()
    {
        SRC.InitSPDList();
    }

    private async Task OnInputFileChange(InputFileChangeEventArgs e)
    {
        var sw = new Stopwatch();
        sw.Start();
        foreach (var file in e.GetMultipleFiles(20))
        {
            switch (file.Name.ToLower())
            {
                case "unit.txt":
                case "robot.txt":
                    SRC.UDList.Load(file.Name, await file.OpenReadStream().ToUTF8Async());
                    break;
                case "pilot.txt":
                    SRC.PDList.Load(file.Name, await file.OpenReadStream().ToUTF8Async());
                    break;
                case "pilot_message.txt":
                    SRC.MDList.Load(file.Name, false, await file.OpenReadStream().ToUTF8Async());
                    break;
                case "pilot_dialog.txt":
                    SRC.DDList.Load(file.Name, await file.OpenReadStream().ToUTF8Async());
                    break;
                case "item.txt":
                    SRC.IDList.Load(file.Name, await file.OpenReadStream().ToUTF8Async());
                    break;
                default:
                    Console.WriteLine($"Not supported file [{file.Name}]");
                    break;
            }
            Console.WriteLine($"{sw.ElapsedMilliseconds}ms [{file.Name}]");
        }
        sw.Stop();
        Console.WriteLine(sw.ElapsedMilliseconds);
        //StatusText = $"{sw.ElapsedMilliseconds}ms";
        StateHasChanged();
    }
}
