<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" Content="text/html; shift_jis">
<TITLE>変数</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<OBJECT TYPE="application/x-oleobject" CLASSID="clsid:1e2a7bd0-dab9-11d0-b93a-00c04fc99f9e">
	<PARAM NAME="Keyword" VALUE="変数">
</OBJECT>

<P><A NAME=".2.n_v"></A></P>

<P><B>変数</B></P>

<P>変数とは各種の状態を記録したり、参照したりするためのものです。自分で作成できるほか、様々な情報を得るためのシステム変数が用意されています。</P>

<P>変数の中でもっとも簡単でなおかつシナリオで多用するのはフラグとよばれるものです。「あるでき事がおこったか(オン)・おこっていないか(オフ)」を記録するために使います。例えばフラグを使うことにより、敵キャラを説得したかどうかを記録しておいて、説得したかどうかであとのイベントの内容を変更することができます。</P>

<P>フラグをオンにセットするには</P>

<P>Set フラグ名</P>

<P>でＯＫです。あとでフラグを参照してイベント内容を変えるには、</P>

<P>If フラグ名 Then</P>

<P>フラグがオンのときの処理</P>

<P>Else</P>

<P>フラグがオフのときの処理</P>

<P>EndIf</P>

<P>のように<A HREF="src371q.htm"><B>If</B>コマンド</A>を使って分岐処理を行います。</P>

<P>変数はフラグとして使うだけでなく、様々な情報を記録するのにも使えます。変数に値を代入し、情報を記録するには<A HREF="src2era.htm"><B>Set</B>コマンド</A>を使います。変数に代入する値は整数でも文字列でもかまいません。例えばキャラ同士の信頼度を記録しておき、一定の値以上になるとデートイベントを発生させる……ということもできます。</P>

<P><B>例</B></P>

<P>Talk アリス</P>

<P>あ…ありがとう。うれしい……</P>

<P>End</P>

<P>Set アリス信頼度 (アリス信頼度 + 1)</P>

<P><B>例２</B></P>

<P>If アリス信頼度 &gt; 5 Then</P>

<P>GoTo アリスとデート</P>

<P>Else</P>

<P>GoTo 誰とデートしようかな</P>

<P>End</P>

<P><A HREF="src2era.htm"><B>Set</B>コマンド</A>で設定した変数の内容はそのステージ限りのもので、次のステージに移動すると消えてしまいます。変数の内容をステージに渡って保持しセーブデータに記録されるようにするには<A HREF="src3705.htm"><B>Global</B>コマンド</A>を使い、変数をグローバル変数に設定します。</P>

<P><B>例</B> Global アリス信頼度</P>

<P>そのステージ内でしか有効でない通常の変数はローカル変数と呼ばれます。</P>

<P>変数の中にはシステムに関する各種の情報を参照するためにあらかじめ設定されているものもあります。このような変数をシステム変数と呼びます。以下の変数がシステム変数として定義されています。</P>

<P><B>ターン数</B>そのステージの経過ターン数</P>

<P><B>総ターン数</B>現在までの累計ターン数</P>

<P><B>フェイズ</B>現在のフェイズの<A HREF="src7ysp.htm">陣営名</A></P>

<P><B>味方数</B>出撃・格納状態にある味方のユニット数</P>

<P><B>ＮＰＣ数</B>出撃・格納状態にあるＮＰＣのユニット数</P>

<P><B>敵数</B>出撃・格納状態にある敵のユニット数</P>

<P><B>中立数</B>出撃・格納状態にある中立のユニット数</P>

<P><B>資金</B>現在の資金</P>

<P><B>選択</B><A HREF="src36we.htm"><B>Ask</B>コマンド</A>・<A HREF="src375i.htm"><B>Question</B>コマンド</A>でプレイヤーが選択した選択肢。</P>

<P><B>対象パイロット</B>イベントの対象となったユニットの<A HREF="src7co2.htm">メインパイロット</A>のパイロットＩＤ。</P>

<P>パイロットＩＤはザコパイロットや汎用パイロットの場合はパイロットの名称と異なるため、</P>

<P>パイロットの名称が必要な場合はPilot関数を使ってください。</P>

<P>(SRC Ver.1.6までの対象ユニットに相当する変数です。)</P>

<P><B>相手パイロット</B>イベントの対象となったユニットの相手ユニットのメインパイロットのパイロットＩＤ</P>

<P>パイロットＩＤはザコパイロットや汎用パイロットの場合はパイロットの名称と異なるため、</P>

<P>パイロットの名称が必要な場合はPilot関数を使ってください。</P>

<P>(SRC Ver.1.6までの相手ユニットに相当する変数です。)</P>

<P><B>例</B> 破壊イベント</P>

<P>    対象パイロット = 破壊されたユニットのメインパイロット</P>

<P>    相手パイロット = 相手を破壊したユニットのメインパイロット</P>

<P><B>対象ユニットＩＤ</B>イベントの対象となったユニットの<A HREF="src2hpr.htm">ユニットＩＤ</A></P>

<P><B>相手ユニットＩＤ</B>イベントの対象となったユニットの相手ユニットの<A HREF="src2hpr.htm">ユニットＩＤ</A></P>

<P><B>対象ユニット使用武器</B> イベントの対象となったユニットが使用した武器名</P>

<P><B>相手ユニット使用武器</B> イベントの対象となったユニットの相手ユニットが使用した武器名</P>

<P>防御した場合は「防御」、回避した場合は「回避」、無抵抗の場合は空文字列""が返る)</P>

<P><B>対象ユニット使用武器番号</B> イベントの対象となったユニットが使用した武器の番号</P>

<P><B>相手ユニット使用武器番号</B> イベントの対象となったユニットの相手ユニットが使用した武器の番号</P>

<P><B>対象ユニット使用アビリティ</B> イベントの対象となったユニットが使用したアビリティ名</P>

<P><B>対象ユニット使用アビリティ番号</B> イベントの対象となったユニットが使用したアビリティの番号</P>

<P><B>対象ユニット使用スペシャルパワー</B> イベントの対象となったユニットが使用したスペシャルパワー名</P>

<P><B>サポートアタックユニットＩＤ</B>サポートアタックを行ったユニットの<A HREF="src2hpr.htm">ユニットＩＤ</A></P>

<P>戦闘直後のイベントで参照した場合にのみ正しい値を返します。</P>

<P><B>サポートガードユニットＩＤ</B>サポートガード、かばう、身代わりのいずれかによって攻撃を代わりに受けた</P>

<P>ユニットの<A HREF="src2hpr.htm">ユニットＩＤ</A></P>

<P>戦闘直後のイベントで参照した場合にのみ正しい値を返します。</P>

<P><B>ステージ</B>現在のステージのイベントファイル名</P>

<P><B>次ステージ</B>次のステージのイベントファイル名（値を変更可能）</P>

<P><B>セーブデータファイル名</B> インターミッションでのセーブ時に使われるファイル名（値を変更可能）</P>

<P><B>Now</B>現在の時間。時間データ処理関数を使って時刻や日付を参照することができます。</P>

<P>時間データは数値ではないので直接演算は行えませんが、DiffTime関数を使うことで</P>

<P>２つの時間の差を求めることができます。</P>

<P><B>AppPath</B>Src.exeのあるフォルダの絶対パス</P>

<P><B>AppVersion</B>Src.exeのバージョン番号を5桁の数字で返す。</P>

<P>例 Ver.1.7.3 → 10703</P>

<P><B>ArgNum</B>現在実行中のサブルーチンの引数の数</P>

<P><B>BaseX</B>描画系のコマンドに対するＸ座標の基準位置</P>

<P><B>BaseY</B>描画系のコマンドに対するＹ座標の基準位置</P>

<P>通常、描画系のコマンドで指定された座標位置はマップウィンドウの左上隅の座標を</P>

<P>基準として計算されますが(背景描き込みの場合はマップの左上隅が基準)、この２つ</P>

<P>の変数の値を書き変える事で基準となる位置を変更できます。</P>

<P>例えば BaseX=100,BaseY=200 の時、描画位置に(10,20)を指定すると、実際に描画が</P>

<P>行われる座標は(110,220)になります。</P>

<P>この２つの変数は各イベントの開始時に0へ初期化されます。</P>

<P>また、メッセージや特殊効果、戦闘アニメにおけるイベントコマンド実行開始時にも</P>

<P>0へ初期化されます。</P>

<P><B>ExtDataPath</B> <A HREF="src76ef.htm">Src.ini</A>で指定した拡張データの絶対パス</P>

<P><B>ExtDataPath2</B> <A HREF="src76ef.htm">Src.ini</A>で指定した拡張データ２の絶対パス</P>

<P><B>MouseX</B>マップウィンドウ上でのマウスカーソルのＸ座標</P>

<P><B>MouseY</B>マップウィンドウ上でのマウスカーソルのＹ座標</P>

<P>上記２つの関数は、現在のマウスカーソルの座標をピクセル単位で返すものです。</P>

<P>マップ攻撃のターゲット座標など、プレイヤーが選択した座標を参照したい場合は</P>

<P>X,Y,WX,WY関数を使ってください。</P>

<P>これらのシステム変数は<A HREF="src2era.htm"><B>Set</B>コマンド</A>や<A HREF="src371r.htm"><B>Incr</B>コマンド</A>で値を変更することができません（ターン数、総ターン数、資金、次ステージ、BaseX、BaseYは例外）。ただし値の参照は他の変数と同じように行えます。</P>

<P>いくつかのシステム変数はイベント終了後の値が保証されていません。例えば「選択」はAskコマンドを使ったイベントが終わった後に他のイベントで値を参照しても同じ値を返すとは保証されません。イベント終了後に値を参照したい場合は通常の変数に値を保存して下さい。値が保証されない変数は以下の通りです。</P>

<P><B>対象パイロット、相手パイロット、対象ユニットＩＤ、相手ユニットＩＤ</B></P>

<P><B>対象ユニット使用武器、相手ユニット使用武器</B></P>

<P><B>対象ユニット使用武器番号、相手ユニット使用武器番号</B></P>

<P><B>対象ユニット使用アビリティ、対象ユニット使用アビリティ番号</B></P>

<P><B>選択</B></P>

<P>特殊な機能を持つ変数としては他に愛称設定用変数があります。変数名が「主人公〜愛称」または「ヒロイン〜愛称」になっている変数がそれに該当します。詳しくはパイロットデータ、ユニットデータの愛称のところを参照してください。</P>

<P>変数名に「[インデックス]」を付けることで連想配列として使用することもできます。インデックスには数値と文字列の両方を使うことができます。インデックスは式として処理されるため<A HREF="src3700.htm"><B>ForEach</B>コマンド</A>などと併用し、大量のデータを一括して処理することができます。</P>

<P><B>例</B></P>

<P>味方ユニットが存在する座標をすべてを一括してPrevX[]とPrevY[]に記録する。</P>

<P>ForEach 味方</P>

<P>PrevX[対象ユニットＩＤ] = X()</P>

<P>PrevY[対象ユニットＩＤ] = Y()</P>

<P>Next</P>

<P>連想配列をグローバル変数にするには個々の要素に<A HREF="src3705.htm"><B>Global</B>コマンド</A>を使用するのではなく、配列名に対して<B>Global</B>コマンドを使用してください。</P>

<P><B>例</B> Global PrevX</P>

<P>インデックスを複数用いて多次元配列として使うこともできます。この際、インデックスは「,」（半角）で区切って下さい。</P>

<P><B>例</B> Array[i, j + 1]</P>

<P><B>注意</B></P>

<P>・値が設定されていない配列要素を使ってを値を読み出した時には空文字列が読み出されます。配列の要素数を調べるには<A HREF="src2l0z.htm">Count関数</A>を使います。</P>

<P>・配列と同じ名前の通常の変数を使用することは避けてください。変数の処理が正しく行えない可能性があります。</P>

<P>・変数名には任意の文字列を使うことが出来ますが、半角数字で始まる変数名や、半角文字の特殊記号(アンダーライン「_」を除く)をつけた変数名は使わないで下さい。(特に「"」は配列のインデックス内にも使うことが出来ません)</P>

<P>・変数名としてユニット名やパイロット名、システム的に使用される文字列(例：味方、ターン数、サイズ…)をそのまま使うことは避けてください。思わぬ動作を招くことがあります。</P>

<P>・システム的な制限から変数名は大文字・小文字の区別やひらがな、カタカナの区別がつきません。紛らわしい名前(例 Xとｘ、さいずとサイズ)を付けていると両者が混同されて思わぬ結果を招くことがあります。このような名前を使うことは避けてください。逆に同じ変数を大文字と小文字の両方で参照することも避けてください。</P>

</BODY>
</HTML>
